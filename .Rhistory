barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
plot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
load(url("http://bit.ly/dasi_gss_data"))
rm(list = ls[!grepl("gss",ls())])
rm(list = ls()[!grepl("gss",ls())])
load(url("http://bit.ly/dasi_anes_data"))
table(gss$natcrime,gss$race)
barplot(table(gss$natcrime,gss$race))
totals <- table(gss$natcrime,gss$race)
total
totals
totals[,]
totals[,1]
sum(totals[,1])
totals <- rbind(totals,sum(totals[,1:3]))
totals
totals <- totals[1:3,]
totals
str(gss)
snapshot <- cbind(gss$race,gss$natcrime)
snapshot
str(snapshot)
cbind(as.character(gss$race),as.character(gss$natcrime))
snapshot <- cbind(as.character(gss$race),as.character(gss$natcrime))
cbind(as.factor(gss$race),as.factor(gss$natcrime))
snapshot <- cbind(as.factor(gss$race),as.factor(gss$natcrime))
snapshot <- cbind(as.character(gss$race),as.character(gss$natcrime))
factors <- as.factor(snapshot)
factors
str(factors)
factors <- as.factor(snapshot$race, snapshot$natcrime)
str(snapshot)
head(snapshot)
head(snapshot,100)
head(snapshot,1000)
head(snapshot,10000)
head(snapshot,2000)
snapshot[1600:1700,]
load(url("http://www.openintro.org/stat/data/ames.RData"))
str(ames)
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
?iqr
IQR(area)
samp0 <- sample(area,50)
samp1 <- sample(area,50)
samp0 == samp1
summary(samp0)
summary(samp1)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
?hist
hist(sample_means50,breaks=50)
hist(sample_means50,breaks=25)
hist(sample_means50,breaks=65)
summary(sample_means50)
hist(sample_means50)
sample_means10 <- rep(NA, 5000)
sample_means100 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 10)
sample_means10[i] <- mean(samp)
samp <- sample(area, 100)
sample_means100[i] <- mean(samp)
}
hist(sample_means10)
hist(sample_means100)
hist(sample_means10)
par(mfrow = c(3, 1))
xlimits = range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
?[ar]
?par
par(mfrow = c(1, 1))
summary(price)
samp2 <- sample(50,price)
samp2 <- sample(price,50)
hist(samp2)
samp_means50 = rep(NA,5000)
for(i in 1:5000){}
for(i in 1:5000){
samp <- sample(price,50)
samp_means50[i] <- samp
}
warnings()
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(samp_means50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 150)
sample_means50[i] <- mean(samp)
}
hist(samp_means50)
rm(list = ls())
load(url("http://www.openintro.org/stat/data/ames.RData"))
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
mean(samp)
median(samp)
sample_mean <- mean(samp)
se <- sd(samp)/sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
median(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower[1],upper[1])
plot_ci(lower, upper, mean(population))
lower <- samp_mean - 2.33 * samp_sd / sqrt(n); upper <- samp_mean + 2.33 * samp_sd / sqrt(n)
plot_ci(lower, upper, mean(population))
c(lower[1],upper[1])
getwd()
setwd("~/R")
source("init.r")
source("http://bit.ly/dasi_inference")
load(url("http://www.openintro.org/stat/data/atheism.RData"))
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
me[p == .5]
n <- 2401
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
me[p == .5]
n <- 9604
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
me[p == .5]
us12 = subset(atheism, atheism$nationality == "United States" & atheism$year == "2012")
inference(us12$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
(.0634-.0364)/2
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
str(mlb11)
pairs(mlb11)
pairs(mlb11, gap = 0, pch = ".")
?pairs
pairs(mlb11 ~ x, gap = 0, pch = ".")
pairs(mlb11 ~ x + y, gap = 0, pch = ".")
pairs(mlb11, gap = 0, pch = ".")
?pairs
unique(mlb11$team)
pairs(mlb11["Texas Rangers",], gap = 0, pch = ".")
pairs(mlb11, gap = 0, pch = ".")
with(mlb11,plot(runs ~ new_obs)
)
RnNo <- with(mlb11,lm(runs ~ new_obs))
summary(RnNo)
abline(RnNo)
with(mlb11, plot(runs ~ at_bats))
with(mlb11, cor(runs, at_bats))
with(mlb11,abline(lm(runs ~ at_bats)))
with(mlb11,abline(lm(runs ~ at_bats), col = "red"))
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
mlb11[,1:10]
mlb11
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
rm(RnNo)
summary(ml)
summary(m1)
m2 <- lm(runs ~ homeruns, data = mlb11)
summary(m2)
plot(mlb11$runs ~ mlb11$at_bats)
abline(m1)
plot(m1$residuals ~ mlb11$at_bats)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)  # adds diagonal line to the normal prob plot
hist(m1$residuals)
plot(m1$residuals ~ mlb11$at_bats)
abline(h = 0, lty = 3)  # adds a horizontal dashed line at y = 0
str*mlb11
str(mlb11)
ss <- mlb11[,2:6]
ss
pairs(ss)
summary(lm(runs ~ hits, data = mlb11))
summary(lm(runs ~ bat_avg, data = mlb11))
pairs(mlb11, gap = 0, pch = ".")
summary(lm(runs ~ new_onbase, data = mlb11))
summary(lm(runs ~ new_slug, data = mlb11))
summary(lm(runs ~ new_obs, data = mlb11))
64.68-0.62*81.4
14.212-13.1
sqrt(0.72)
2.869/3.008
?pt
?pt
?pt
?pt
pt(1:5, df = 1)
76+.35*72+.43*30+26.57
pt(1:5, df = 2)
pt(1:5, df = 100)
pt(1:5, df = .2)
pt(-2:2, df = .2)
pt(-2:2, df = 100)
pt(-2:2, df = 1000)
pt(-2:2, df = 10000)
?pnorm
pnorm(-2:2)
?qt
qt(0.025,df = 394)
library(DiagrammeR)
install.packages("DiagrammeR")
library(DiagrammeR)
?DiagrammeR
?diagrammer
load(url("http://www.openintro.org/stat/data/evals.RData"))
rm(list = ls())
load(url("http://www.openintro.org/stat/data/evals.RData"))
str(evals)
attach(evals)
summary(score)
?attach
plot(score)
boxplat(score)
boxplot(score)
boxplot(score ~ gender)
boxplot(score ~ -gender)
boxplot(bty_avg ~ gender)
boxplot(bty_avg ~ score)
plot(bty_avg ~ score)
plot(bty_avg ~ cls_students)
pairs(evals)
?pairs
pairs(~ score + gender + language)
pairs(~ score + gender + language + age + cls_students + bty_avg)
plot(bty_avg ~ age)
abline(lm(bty_avg ~ age))
summary(lm(bty_avg~age))
model <- lm(bty_avg~age)
plot(model$residuals ~ age)
abline(h = 0)
hist(model$residuals)
boxplot(score)
summary(score)
evals[score < 3]
evals[score < 3,]
evals$score < 3
sum(evals$score < 3)
hist(score)
plot(score ~ bty_avg)
abline(lm(score ~ bty_avg))
?jitter
plot(score ~ jitter(bty_avg)
)
plot(score ~ jitter(bty_avg))
plot(jitter(score) ~ jitter(bty_avg))
heat(score ~ bty_avg)
heatmap(score ~ bty_avg)
map(score ~ bty_avg)
image(score ~ bty_avg)
?heatmap
m_bty <- lm(score~bty_avg)
summary(m_bty)
plot(m_bty$residuals ~ bty_avg)
abline(h = 0)
hist(m_bty$residuals)
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
plot(score ~ bty_avg + gender)
plot(m_bty_gen$residuals ~ score)
plot(m_bty_gen$residuals ~ bty_avg)
plot(m_bty_gen$residuals ~ gender)
?qqnorm
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(abs(m_bty_gen$residuals) ~ gender)
plot(abs(m_bty_gen$residuals) ~ bty_avg)
plot(abs(jitter(m_bty_gen$residuals) ~ bty_avg)
)
plot(abs(jitter(m_bty_gen$residuals)) ~ bty_avg)
plot(abs(jitter(m_bty_gen$residuals)) ~ jitter(bty_avg))
multiLines(m_bty_gen)
m_bty_rank <- lm(score ~ bty_avg + rank, data = evals)
multiLines(m_bty_rank)
summary(m_bty_rank)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_full)
multiLines(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m_full)
str(m_full)
m <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m1)
rm(m)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)
summary(m1)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m2)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)
summary(m2)$adj.r.squared
m2 <- lm(score ~ gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_profs + cls_credits, data = evals)
summary(m2)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + age + cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_level + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + bty_avg, data = evals)
summary(m3)$adj.r.squared
m3 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits, data = evals)
summary(m3)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ gender + language + age + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + language + age + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + age + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + age + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_credits + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + bty_avg, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_credits, data = evals)
summary(m4)$adj.r.squared
m4 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_credits + bty_avg, data = evals)
summary(m4)
DiagrammeR("
graph LR;
A-->B;
A-->C;
C-->E;
B-->D;
C-->D;
D-->F;
E-->F;
")
library(DiagrammeR)
DiagrammeR("
graph LR;
A-->B;
A-->C;
C-->E;
B-->D;
C-->D;
D-->F;
E-->F;
")
DiagrammeR("
graph TB;
A-->B;
A-->C;
C-->E;
B-->D;
C-->D;
D-->F;
E-->F;
")
DiagrammeR("
graph LR;
A(Rounded)-->B[Squared];
B-->C{A Decision};
C-->D[Square One];
C-->E[Square Two];
style A fill:#E5E25F;
style B fill:#87AB51;
style C fill:#3C8937;
style D fill:#23772C;
style E fill:#B6E6E6;
")
?aov
DiagrammeR("
+   graph LR;
+     A(Rounded)-->B[Squared];
+            B-->C{A Decision};
+            C-->D[Square One];
+            C-->E[Square Two];
+
+            style A fill:#E5E25F;
+            style B fill:#87AB51;
+            style C fill:#3C8937;
+            style D fill:#23772C;
+            style E fill:#B6E6E6;
+            ")
source('~/R/init.r', echo=TRUE)
list.files()
setwd(path.git)
setwd("RepData_PeerAssessment1/")
source('~/GitHub/RepData_PeerAssessment1/project1.r', echo=TRUE)
by_date <- group_by(tidy, date)
head(tidy)
by_date <- group_by(tidy, time)
rm(by_date)
head(rr1)
tidy <- cbind(tidy,rr1$date)
tidy
head(tidy)
names(tidy)[3] <- "date"
names(tidy)[2] <- "datetime"
head(tidy)
head(rr1)
source('~/R/init.r', echo=TRUE)
source('~/GitHub/RepData_PeerAssessment1/project1.r', echo=TRUE)
head(tidy)
ggplot(tidy)
library(ggplot2)
ggplot(tidy)
ggplot(tidy, aes(date, steps)) + geom_smooth() + geom_point() + geom_line()
by_date <- group_by(tiday, date)
by_date <- group_by(tidy, date)
summarize(by_date, steps = sum(steps))
sbd <- summarize(by_date, steps = sum(steps))
ggplot(sbd, aes(date, steps)) + geom_smooth() + geom_point() + geom_line()
ggplot(sbd, aes(date, steps)) + geom_smooth()
ggplot(sbd, aes(date, steps, group = 1)) + geom_smooth()
ggplot(sbd, aes(date, steps, group = 1)) + geom_smooth() + geom_point() + geom_line()
?group_by
ggplot(sbd, aes(date, steps, group = 1)) + geom_histogram()
ggplot(sbd, aes(date, stat = identify)) + geom_histogram()
ggplot(sbd, aes(date, stat = "identify")) + geom_histogram()
ggplot(sbd, aes(date, stat = "bin")) + geom_histogram()
ggplot(sbd, aes(date)) + geom_histogram()
ggplot(rr1, aes(date)) + geom_histogram()
?barplot
barplot(sbd$steps)
ggplot(rr1, aes(date)) + geom_bar()
?geom
?geom_line
help(aes)
ggplot(sbd, aes(date)) + geom_bar()
ggplot(sbd, aes(date,steps)) + geom_bar()
ggplot(sbd, aes(date,steps, group = 1)) + geom_bar()
ggplot(sbd, aes(date,steps, group = 1, stat = "identify")) + geom_bar()
ggplot(sbd, aes(date,group = 1, stat = "identify")) + geom_bar()
ggplot(sbd, aes(steps,group = 1, stat = "identify")) + geom_bar()
ggplot(sbd, aes(steps,stat = "identify")) + geom_bar()
ggplot(sbd, aes(steps,stat = "identify")) + geom_bar() + scale_color_gradient()
ggplot(sbd, aes(steps,stat = "identify")) + geom_bar() + scale_color_gradient
ggplot(sbd, aes(steps,stat = "identify", scale_color_gradient)) + geom_bar()
ggplot(sbd, aes(date, steps)) + geom_smooth() + geom_point() + geom_line()
ggplot(sbd, aes(date, steps, group = 1)) + geom_smooth() + geom_point() + geom_line()
ggplot(sbd, aes(date,steps, group = 1)) + geom_bar()
ggplot(sbd, aes(steps,stat = "identify")) + geom_bar()
ggplot(sbd, aes(date,steps, group = 1, stat = "identify")) + geom_bar()
ggplot(sbd, aes(date,steps, group = 1)) + geom_bar()
